stages:
  - build
  - update
  - deploy

services:
  - docker:dind

variables:
  APP_NAME: "nodejs-express-mysql"
  DOCKER_IMAGE: "registry.gitlab.com/bernabaris/nodejs-express-mysql"
  GCP_PROJECT_NAME: "nodejs-express-project"
  GKE_CLUSTER_NAME: "nodejs-express-cluster"
  GKE_CLUSTER_ZONE: "us-central1-c"
  HELM_VERSION: 3.16.3
  NAMESPACE: default

build:
  stage: build
  image:
    name: docker:latest
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - echo "Hello, $GITLAB_USER_LOGIN!"
    - echo "Building application..."
    - echo "Reading current version..."
    - CURRENT_VERSION=$(grep '^appVersion:' chart/Chart.yaml | awk '{print $2}')
    - echo "Current version $CURRENT_VERSION"
    - NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$3+=1; print $1"."$2"."$3}')
    - echo "New version $NEW_VERSION"
    - docker build -t $DOCKER_IMAGE:$NEW_VERSION .
    - docker push $DOCKER_IMAGE:$NEW_VERSION
    - echo $NEW_VERSION > .new_version
  artifacts:
    paths:
      - .new_version

update_chart_version:
  stage: update
  script:
    - NEW_VERSION=$(cat .new_version)
    - echo "Updating Chart.yaml with new version $NEW_VERSION"
    - sed -i "s/appVersion:.*/appVersion:\ $NEW_VERSION/" chart/Chart.yaml
    - echo "Updated Chart.yaml:"
    - cat chart/Chart.yaml
    - git config --global user.name "GitLab CI"
    - git config --global user.email "ci@example.com"
    - git checkout -b $CI_DEFAULT_BRANCH
    - git add chart/Chart.yaml
    - git commit -m "ci - Bump appVersion to $NEW_VERSION after Docker push"
    - git push https://$CI_CD_TOKEN@gitlab.com/bernabaris/nodejs-express-mysql.git HEAD:$CI_COMMIT_REF_NAME
  needs: [ "build" ]

.deploy:
  stage: deploy
  image:
    name: google/cloud-sdk
  script:
    - echo "Deploying application with Helm..."
    - echo "$GCP_SERVICE_ACCOUNT_KEY" > key.json
    - gcloud auth activate-service-account --key-file=key.json
    - gcloud config set project $GCP_PROJECT_NAME
    - gcloud container clusters get-credentials $GKE_CLUSTER_NAME --zone $GKE_CLUSTER_ZONE --project $GCP_PROJECT_NAME

    - curl -L https://get.helm.sh/helm-v$HELM_VERSION-linux-amd64.tar.gz | tar xz
    - mv linux-amd64/helm /usr/bin/
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm dependency build ./chart
    - helm upgrade ${APP_NAME} ./chart --install --namespace $NAMESPACE
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
      when: always
